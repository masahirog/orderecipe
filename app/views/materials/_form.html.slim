= form_for @material do |f|
  = f.hidden_field :group_id,value:@group_id
  - if @material.errors.any?
    #error_explanation
      h2
        = pluralize(@material.errors.count, "error")
        |  prohibited this recipe from being saved:
      ul
        - @material.errors.full_messages.each do |message|
          li
            = message
  .col-md-12
    .col-md-6
      .col-md-12.form-group
        = f.label :name, "食材・資材名（余分な情報はメモへお願いします）"
        = f.text_field :name, class:'form-control name_ja',required:true
      .col-md-12.form-group
        = f.label :short_name, "省略名 ひらがな"
        = f.text_field :short_name, class:'form-control',required:true
      .col-md-12.form-group
        = f.label :order_name, "発注書記載名"
        = f.text_field :order_name, class:'form-control',required:true
      .col-md-12.form-group
        = f.label :unused_flag, "販売ステータス"
        = f.select :unused_flag,[['使用中',false],['使用停止',true]],{selected:@material.unused_flag}, class:"form-control"
      .col-md-12.form-group
        = f.label :category, "カテゴリ"
        = f.select :category, options_for_select_from_enum(Material, :category),{}, { class: "form-control"}
      .col-md-12.form-group
        = f.label :storage_place, "棚卸し分類"
        = f.select :storage_place, options_for_select_from_enum(Material, :storage_place),{}, { class: "form-control"}

      .col-md-12.form-group
        = f.label :measurement_flag, "仕込みの食材別シートに表示する"
        = f.check_box :measurement_flag, class: "form-control"
      .col-md-12.form-group
        = f.label :vendor_id, "仕入先企業名"
        = f.collection_select :vendor_id, Vendor.where(group_id:@group_id), :id, :name, {include_blank: true}, { class: "form-control"}
      .col-md-12.form-group
        = f.label :vendor_stock_flag, "メーカー在庫品・受注品"
        = f.select :vendor_stock_flag, [["在庫品", true], ["受注品", false]],{}, class: "form-control"

      .col-md-12.form-group style="padding:0;"
        .col-md-12
          = f.label :delivery_deadline, "発注締め切り"
        .col-md-8
          = f.select :delivery_deadline,options_for_select(0..10,f.object.delivery_deadline),{}, class: "form-control"
        .col-md-4 style="margin-top:10px;padding:0;"
          | 営業日前
      .col-md-12.form-group
        = f.label :order_code, "業者管理コード"
        = f.text_field :order_code, class:'form-control'
    .col-md-6
      = f.label :image, "写真"
      = f.file_field :image
      = f.hidden_field :image_cache
      .form-group
        - if @material.image.present?
          / object data="#{@material.image.to_s}" type="application/pdf" style='height:400px;width:400px;margin-bottom:5px;'
          iframe src="#{@material.image.to_s}" width="80%" height='500px' style="border: none;"
          div
            = f.label :remove_image,"削除する"
            = f.check_box :remove_image

  .col-md-12
    .box26.clearfix
      span class="box-title" 発注最小ロット、単位と価格（税抜き）
      = f.text_field :order_unit_quantity,class:"input_order_unit_quantity form-control text-right",placeholder:1,style:'width:140px;float:left;margin-right:5px;',required:true
      = f.select :order_unit, ["kg","p/c", "c/s","箱","缶", "束", "枚","個","本","ポリ","人前"],{}, { class: "form-control input_order_unit",style:'width:70px;float:left;'}
      span style='padding:15px 15px 0 15px;float:left;' あたり
      = f.text_field :recipe_unit_price, class:'form-control',style:'width:140px;float:left;',required:true
      span style='padding:15px 0 0 15px;float:left;' 円（税別）
      input.tax_contain_recipe_unit_price.form-control style='width:140px;float:left;margin-left:15px;' readonly=true
      span style='padding:15px 0 0 15px;float:left;' 円（税込）
    .box26.clearfix
      span class="box-title" レシピ上の使用単位
      - if action_name == 'edit'
        div.edit_recipe_unit style='float:left;width:150px;border: 1px solid silver;border-radius:3px;padding:5px 10px;background-color:#EEEEEE' = f.object.recipe_unit
      - else
        = f.select :recipe_unit, ["ml","g","袋","本","枚","個","人前"],{}, { class: "input_recipe_unit form-control",style:'float:left;width:150px;'}
      span.recipe_unit_quantity_label style='padding:13px 5px 0 50px;float:left;'
      span style='padding:15px 10px 0 0;float:left;'  あたり
      = f.text_field :recipe_unit_quantity, class:'form-control',style:'float:left;width:150px;',required:true
      .recipe_unit_quantity_unit style='padding:13px 0 0 10px;float:left;'
      - if action_name == 'edit'
        span style='float:left;padding:15px 0 0 8px;font-weight:bold;font-size:16px;' ="#{f.object.recipe_unit} 入り、"
      - else
        span style='float:left;padding:15px 0 0 8px;' 入り、
      span.cost_unit_label style='float:left;padding:13px 0 0 0;font-weight:bold;font-size:16px;'
        = "1#{f.object.recipe_unit}" if action_name == 'edit'
      span style='float:left;padding:15px 10px 0 0;' あたり
      = f.text_field :cost_price, class:'form-control', readonly: 'readonly',style:'float:left;width:100px;'
      span style='float:left;padding:15px 0 0 10px;' 円

    .box26.clearfix
      span class="box-title" 計上時の使用単位（在庫管理時の単位）
      = f.select :accounting_unit, ["p/c","kg","袋","本","枚","個", "c/s","箱","缶", "束","ml","g","ポリ","人前"],{}, { class: "input_accounting_unit form-control",style:'float:left;width:150px;'}
      span.accounting_unit_quantity_label style='float:left;padding:13px 5px 0 50px;'
      span style='float:left;padding:15px 10px 0 0;' あたり
      = f.text_field :accounting_unit_quantity, class:'form-control',style:'float:left;width:150px;',required:true
      - if action_name == 'edit'
        .recipe_unit_quantity_unit style='padding:15px 0 0 15px;float:left;font-weight:bold;font-size:16px;'
          = f.object.recipe_unit
      - else
        .recipe_unit_quantity_unit style='padding:15px 0 0 15px;float:left;'

  - if @material.allergy.nil?
    .col-md-12.form-group style="padding:0;"
      = f.label :allergy, "アレルギー", class:"col-md-12",style:"margin-left:20px;"
      .col-md-1.form-group style="margin-left:20px;"
        = label_tag :egg, '卵'
        = f.check_box  :allergy, {multiple: true, class:"form-control"}, 'egg'
      .col-md-1.form-group
        = label_tag :milk, '乳'
        = f.check_box  :allergy, {multiple: true, class:"form-control"}, 'milk'
      .col-md-1.form-group
        = label_tag :shrimp, 'えび'
        = f.check_box  :allergy, {multiple: true, class:"form-control"}, 'shrimp'
      .col-md-1.form-group
        = label_tag :crab, 'かに'
        = f.check_box  :allergy, {multiple: true, class:"form-control"}, 'crab'
      .col-md-1.form-group
        = label_tag :peanuts, '落花生'
        = f.check_box  :allergy, {multiple: true, class:"form-control"}, 'peanuts'
      .col-md-1.form-group
        = label_tag :soba, 'そば'
        = f.check_box  :allergy, {multiple: true, class:"form-control"}, 'soba'
      .col-md-1.form-group
        = label_tag :wheat, '小麦'
        = f.check_box  :allergy, {multiple: true, class:"form-control"}, 'wheat'
  - else
    .col-md-12.form-group style="padding:0;"
      = f.label :allergy, "アレルギーチェック[必須]", class:"col-md-12",style:"padding:0;margin-left:20px;"
      .col-md-12.form-group style="padding-left:40px;"
        |  ＊以下成分が含まれている場合は必ずチェックを付ける、食品表示の欄に記載あり。
      .col-md-1.form-group style="margin-left:20px;"
        = label_tag :egg, '卵'
        = f.check_box  :allergy, {multiple: true, checked: @material.allergy.include?("egg"),class:"form-control"}, 'egg'
      .col-md-1.form-group
        = label_tag :milk, '乳'
        = f.check_box  :allergy, {multiple: true, checked: @material.allergy.include?("milk"),class:"form-control"}, 'milk'
      .col-md-1.form-group
        = label_tag :shrimp, 'えび'
        = f.check_box  :allergy, {multiple: true, checked: @material.allergy.include?("shrimp"),class:"form-control"}, 'shrimp'
      .col-md-1.form-group
        = label_tag :crab, 'かに'
        = f.check_box  :allergy, {multiple: true, checked: @material.allergy.include?("crab"),class:"form-control"}, 'crab'
      .col-md-1.form-group
        = label_tag :peanuts, '落花生'
        = f.check_box  :allergy, {multiple: true, checked: @material.allergy.include?("peanuts"),class:"form-control"}, 'peanuts'
      .col-md-1.form-group
        = label_tag :soba, 'そば'
        = f.check_box  :allergy, {multiple: true, checked: @material.allergy.include?("soba"),class:"form-control"}, 'soba'
      .col-md-1.form-group
        = label_tag :wheat, '小麦'
        = f.check_box  :allergy, {multiple: true, checked: @material.allergy.include?("wheat"),class:"form-control"}, 'wheat'
  .modal-div.col-md-12.form-group style="padding:0;"
    .col-md-12
      = f.label :food_additive, "食品添加物[必須]", class:"",style:"padding:0;margin-left:20px;"
    ul.col-md-12.food_additive_ul.list-group style="list-style:none;margin:20px;"
      .col-md-12
        label style='width:100px;' 物質名
        span.glyphicon.glyphicon-plus-sign data-toggle="modal" data-target="#sampleModal" style="color:#428bca;font-size:20px;"
      - i=0
      = f.fields_for :material_food_additives, @material.material_food_additives do |mm|
        li.add_li_food_additive.col-md-4.list-group-item style=""
          .select_food_additive.col-md-10 style="padding:3px;width:210px;float:left;"
            = mm.collection_select :food_additive_id, FoodAdditive.all, :id, :name,{include_blank: true},class:'input_select_food_additive'
          .text-right.remove_food_additive.col-md-2 style="padding-top:10px;"
            span.glyphicon.glyphicon-remove.remove_btn style="color:#d9534f;"
            = mm.check_box :_destroy,class:"destroy_food_additives check_box form-control", style: "display:none;"
        - i += 1
    .col-md-12
      button.add_food_additive.btn.btn-default type="button"
        | 追加
  .col-md-12.form-group
    .col-md-6
      = f.label :memo, "メモ"
      = f.text_area :memo, class:'form-control', style:"height:10em;"

  .form-group
    label 発注可能店舗
    - @stores_hash.each do |store_hash|
      div
        span = Group.find(store_hash[0]).name
        ul.list-group.clearfix
          = f.fields_for :material_store_orderables do |mso|
            - if store_hash[1].keys.include?(mso.object.store_id)
              = mso.hidden_field :store_id
              li.list-group-item style='float:left;'
                = mso.label :orderable_flag, store_hash[1][mso.object.store_id]
                = mso.check_box :orderable_flag
  table.table
    thead
      tr
        th
          span 切出パターン　
          = link_to_add_association '追加', f, :material_cut_patterns,class: 'btn btn-primary add_material_fields',data: {association_insertion_node: '#detail-association-insertion-point',association_insertion_method: 'append' }
        th ローマ字
        th マシーン
        th
        th
    tbody#detail-association-insertion-point
      = f.fields_for :material_cut_patterns do |mcp|
        = render 'material_cut_pattern_fields',{f: mcp}


  = f.hidden_field :back_to, :value => @back_to
  - if local_assigns[:locals][:edit_flag] == true
    .action.col-md-12 style="margin-bottom:20px;"
      = submit_tag "更新する", class:"btn btn-success", data: { confirm: "更新すると「#{@material.name}」を使用している、メニュー等全てに反映されますが、よろしいですか？"}
  - else
    .action.col-md-3.form-group
      input.btn.btn-success type="button" onclick="submit();" value="登録する"
= @food_additive = FoodAdditive.new unless @food_additive
#sampleModal.modal.fade tabindex="-1"
  = form_for(@food_additive,remote:true) do |f|
    .modal-dialog
      .modal-content
        .modal-header
          button.close type="button" data-dismiss="modal"
            span ×
          h4.modal-title 食品添加物新規作成
        .modal-body
          label 添加物名（物質名）
          = f.text_field :name, class:'form-control'
        .modal-footer
          button.modal-close.btn.btn-default type="button" data-dismiss="modal" 閉じる
          = f.submit '作成する', data: { confirm: "新規作成してよろしいですか？"} , class:"btn btn-primary"

sass:
  .box26
    position: relative
    margin: 2em 0
    padding: 1.5em 1.3em
    border: solid 2px #6091d3
    border-radius: 8px
    width: 1000px
  .box26 .box-title
    position: absolute
    display: inline-block
    top: -13px
    left: 10px
    padding: 0 9px
    line-height: 1
    font-size: 16px
    background: #FFF
    color: #6091d3
    font-weight: bold
