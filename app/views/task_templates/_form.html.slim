
= form_for @task_template do |f|
  - if @task_template.errors.any?
    #error_explanation
      h2
        = pluralize(@task_template.errors.count, "error")
        |  prohibited this recipe from being saved:
      ul
        - @task_template.errors.full_messages.each do |message|
          li
            = message
  .form-group
    = f.label :repeat_type, "リピートタイプ"
    = f.select :repeat_type, options_for_select_from_enum(TaskTemplate, :repeat_type),{}, { class: "form-control", required:true}
  .form-group
    = f.label :action_time, "時間"
    = f.time_field :action_time,step:900,class:'form-control'

  .form-group
    = f.label :content, "内容"
    = f.text_field :content, class:"form-control", required:true
  .form-group
    = f.label :memo, "メモ"
    = f.text_area :memo, class:"form-control",style:"height:5em;"
  .form-group
    = f.label :drafter, "作者"
    = f.text_field :drafter, class:"form-control", required:true

  .form-group
    label 店舗選択
    ul.list-group.clearfix
      = f.fields_for :task_template_stores do |tts|
        li.list-group-item style='float:left;'
          = tts.hidden_field :task_template_id
          / = tts.hidden_field :_destroy,value:true
          = tts.label :store_id, @stores_hash[tts.object.store_id]
          - if tts.object.id.present?
            = tts.check_box :store_id,{checked:true},tts.object.store_id,false
          - else
            = tts.check_box :store_id,{checked:false},tts.object.store_id,false

            / = tts.check_box :store_id,true,false

      / = f.fields_for :task_template_stores do |tts|
      /   = render 'task_template_store_fields', f:tts
  .form-group
    input.btn.btn-success[type="button" onclick="submit();" value="登録する"]
