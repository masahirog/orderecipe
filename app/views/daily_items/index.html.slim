.clearfix
  div style="float:left"
    = link_to "#{@date.month}月カレンダー",calendar_daily_items_path(start_date:@date),style:"margin-right:50px;"
    = link_to "#{(@date - 1).strftime("%Y年%-m月%-d日(#{%w(日 月 火 水 木 金 土)[(@date-1).wday]})＜＜")}",daily_items_path(date:@date - 1)
    span style='margin:0 15px;font-size:1.5em;' = @date.strftime("%Y年%-m月%-d日(#{%w(日 月 火 水 木 金 土)[@date.wday]})")
    = link_to "#{(@date + 1).strftime("＞＞%Y年%-m月%-d日(#{%w(日 月 火 水 木 金 土)[(@date+1).wday]})")}",daily_items_path(date:@date + 1)
  div style="float:left;margin-left:20px;"
    button type="button" class="btn btn-sm btn-success" data-toggle="modal" data-target="#sampleModal" ステータス変更
    #sampleModal.modal.fade tabindex="-1"
      = form_with model: @buppan_schedule, local: true do |f|
        = f.hidden_field :date,value:@date      
        .modal-dialog
          .modal-content
            .modal-header
              h4.modal-title ステータス変更
            .modal-body
              .form-group
                = f.select :fixed_flag, options_for_select([['確定', true], ['未確定', false]], f.object.fixed_flag),{},class:'form-control fixed_flag'
              .form-group
                = f.text_area :memo,class:'form-control',placeholder:'仕分け備考（仕分け表に表示されます）'
              .action
                = f.submit '更新する',class:'btn btn-success btn-sm'
            .modal-footer
              button.modal-close.btn.btn-default type="button" data-dismiss="modal" 閉じる

  - if @buppan_schedule.fixed_flag == true
    = link_to "SKLバーコード", barcode_csv_daily_items_path(date:params[:date],format:'csv'), method: :post,class:"btn btn-sm btn-primary pull-right"
    button type="button" class="btn btn-sm btn-primary pull-right" data-toggle="modal" data-target="#deliveryModal" style="margin-right:10px;" 仕分け表
    #deliveryModal.modal.fade tabindex="-1"
      .modal-dialog
        .modal-content
          .modal-header
            h4.modal-title 仕訳表種類
          .modal-body
            .form-group
              = link_to "すべて",loading_sheet_daily_items_path(date:@date,sorting_base_id:'', :format => :pdf),target:"_blank"
            .form-group
              = link_to "└ SKL練馬担当一覧",loading_sheet_daily_items_path(date:@date,sorting_base_id:2, :format => :pdf),target:"_blank"
            .form-group
              = link_to "└ 店舗直送一覧",loading_sheet_daily_items_path(date:@date,sorting_base_id:1, :format => :pdf),target:"_blank"
          .modal-footer
            button.modal-close.btn.btn-default type="button" data-dismiss="modal" 閉じる


.clearfix
  - if @buppan_schedule.fixed_flag == true
    label ステータス：確定
  - else
    label ステータス：未確定
  br
    label 仕分け備考：
    = @buppan_schedule.memo

.daily_item_form_area
  = render partial: "daily_item_form", locals: { daily_item:@daily_item,target_id:"modal_new_daily_item"}
.new_item_partial
  = render partial: "new_item", locals: { item:@item}



table.table
  thead
    tr
      th 物販内訳
      th 想定売上
      th 仕入価格
      th 送料
      th 原価
      th 粗利
  tbody
    - @category_sum.each do |data|
      tr
        td = data[0]
        td = "#{data[1]['estimated_sales_sum'].to_s(:delimited)}円"
        td = "#{data[1]['purchase_price_sum'].to_s(:delimited)}円"
        td = "#{data[1]['delivery_fee_sum'].to_s(:delimited)}円"
        td = "#{data[1]['subtotal_price_sum'].to_s(:delimited)}円"
        td
          = "#{data[1]['arari_sum'].to_s(:delimited)}円"
          = "｜#{data[1]["arari_rate"]}%" if data[1]["arari_rate"].present?
    tr
      th 合計
      th = "#{@buppan_sum["estimated_sales_sum"].to_s(:delimited)}円"
      th = "#{@buppan_sum["purchase_price_sum"].to_s(:delimited)}円"
      th = "#{@buppan_sum["delivery_fee_sum"].to_s(:delimited)}円"
      th = "#{@buppan_sum["subtotal_price_sum"].to_s(:delimited)}円"
      th
        = "#{@buppan_sum["arari_sum"].to_s(:delimited)}円"
        = "｜#{(@buppan_sum["arari_sum"]/@buppan_sum["estimated_sales_sum"].to_f*100).round(1)}%"

.table-responsive style="overflow: scroll;overscroll-behavior-x: contain;"
  table.table.layout-fixed style='border-collapse:separate;'
    colgroup
      col class="col90"
      col class="col90"
      col class="col90"
      col class="col90"
      col class="col120"
      col class="col240"
      col class="col120"
      col class="col240"
      col class="col240"
      col class="col120"
      col class="col120"
      col class="col120"
      col class="col120"
      col class="col120"
      col class="col120"
      - @stores.each do |store|
        col class="col90"
    thead
      tr
        th
          button type="button" class="btn btn-sm btn-success" data-toggle="modal" data-target="#modal_new_daily_item" 追加
        th 用途
        th 拠点
        th カテゴリ
        th 生産者
        th 商品
        th 納品量
        th 仕分メモ
        th 管理メモ
        th 仕入値
        th 送料
        th 調整
        th 仕入小計
        th 見込売上
        th 粗利
        - @stores.each do |store|
          th.text-center
            / = link_to store.short_name, barcode_csv_daily_items_path(store_id:store.id,date:params[:date],format:'csv'), method: :post
            = link_to store.short_name, label_daily_items_path(store_id:store.id,date:params[:date])
    tbody.add_point
      - @buppan_daily_items.each do |daily_item|
        = render partial: "tr", locals: { daily_item:daily_item,purpose:"物販"}
      - @sozai_daily_items.each do |daily_item|
        = render partial: "tr", locals: { daily_item:daily_item,purpose:"惣菜"}
.daily_items_modal_area
  - @daily_items.each do |daily_item|
    = render partial: "daily_item_form", locals: { daily_item:daily_item,target_id:"modal_#{daily_item.id}"}
javascript:
  $('.item_select2').select2({width:"100%",dropdownParent: $('#modal_new_daily_item')})
  $('.variety_select2').select2({width:"100%",dropdownParent: $('#new_item_add')})
  $('body').on('change', '.item_vendor_select' , function() {
    var id = $(this).parents('.modal').attr('id');
    $.get({
      url: "#{get_vendor_items_items_path}",
      data: { item_vendor_id: $(this).val() }
    }).done(function(data){
      $(".item_edit_url").hide();
    });
  });

  $('body').on('change', '.subordinate_amount_input' , function() {
    var id = $(this).parents('.modal').attr('id');
    var delivery_amount = Number($("#"+id).find(".delivery_amount").val());
    var total = 0
    $("#"+id).find(".daily_item_store").each(function(){
      total = total + Number($(this).find(".subordinate_amount_input").val());
    });
    if (total == delivery_amount) {
      $("#"+id).find(".subordinate_amount_input").css('background-color','white');
    }else{
      $("#"+id).find(".subordinate_amount_input").css('background-color','pink');
    };
  });
  $('body').on('change', '.item_select' , function() {
    var id = $(this).parents('.modal').attr('id');
    item_select_change(id);
  });
  
  $('body').on('change', '.delivery_fee_input' , function() {
    var id = $(this).parents('.modal').attr('id');
    var komi = Math.floor($(this).val()*1.1);
    $("#"+id).find(".tax_including_delivery_fee_input").val(komi);
    // subordinate(id);
    calculate(id);
  });
  $('body').on('change', '.adjustment_subtotal_input' , function() {
    var id = $(this).parents('.modal').attr('id');
    calculate(id);
  });

  $('body').on('change', '.purchase_price_input' , function() {
    var id = $(this).parents('.modal').attr('id');
    var komi = Math.floor($(this).val()*1.08);
    $("#"+id).find(".tax_including_purchase_price_input").val(komi);
    // subordinate(id);
    calculate(id);
  });

  $('body').on('change', '.order_unit' , function() {
    var id = $(this).parents('.modal').attr('id');
    var order_unit = $(this).children("option:selected").text();
    $("#"+id).find(".span_order_unit").text("1"+ order_unit+"あたり");
  });


  $('body').on('change', '.order_unit_amount' , function() {
    var id = $(this).parents('.modal').attr('id');
    subordinate(id);
    calculate(id);
  });

  $('body').on('change', '.item_order_unit_amount' , function() {
    var id = $(this).parents('.modal').attr('id');
    subordinate(id);
    calculate(id);
  });


  $("input[type='number']").focus(function(){
    $(this).select();
  });

  $('body').on('change', '.dis_check_box' , function() {
    var id = $(this).parents('.modal').attr('id');
    subordinate(id);
    calculate(id);
  });


  $('body').on('change', '.sell_price' , function() {
    var id = $(this).parents('.modal').attr('id');
    var sell_price = $(this).val();
    var reduce_tax_flag = $(".item_reduce_tax_flag").val();
    if (reduce_tax_flag == "1") {
      var tax_rate = 1.08
    }else{
      var tax_rate = 1.1
    }
    var tax_including_sell_price = Math.floor(sell_price * tax_rate );
    $(this).siblings(".tax_including_sell_price").val(tax_including_sell_price);
    calculate(id);
  });
  $('body').on('change', '.subordinate_amount_input' , function() {
    var id = $(this).parents('.modal').attr('id');
    calculate(id);
  });


  function subordinate(id){
    $("#"+id).find(".subordinate_amount_input").css('background-color','white');
    var order_unit_amount = Number($("#"+id).find(".order_unit_amount").val());
    var item_order_unit_amount = Number($("#"+id).find(".item_order_unit_amount").val());
    var delivery_amount = order_unit_amount * item_order_unit_amount;
    var checked_count = $("#"+id).find('input.dis_check_box:checked').length;
    var subordinate_amount = Math.round(delivery_amount / checked_count)
    var amari = delivery_amount % checked_count
    var subordinate_amount = Math.round((delivery_amount - amari) / checked_count)
    $("#"+id).find(".delivery_amount").val(delivery_amount);
    $("#"+id).find(".daily_item_store").each(function(){
      if (amari > 0) {
        var add = 1
        amari = amari - 1
      }else{
        var add = 0
      }
      var store_id = $(this).find(".store_id").val();
      if ( $(this).find(".dis_check_box").is(':checked') ){
        $(this).find(".subordinate_amount_input").val(subordinate_amount + add);
      }else{
        $(this).find(".subordinate_amount_input").val(0);
      }
    });
  }

  function calculate(id){
    var unit_sell_price = Number($("#"+id).find(".sell_price").val());
    var tax_including_unit_sell_price = Number($("#"+id).find(".tax_including_sell_price").val());
    var cost = Number($("#"+id).find(".subtotal_price_input").val());
    var sales = 0
    var unit_cost_price = Number($("#"+id).find(".purchase_price_input").val());
    var tax_including_unit_cost_price = Number($("#"+id).find(".tax_including_purchase_price_input").val());
    var delivery_fee = Number($("#"+id).find(".delivery_fee_input").val());
    var adjustment = Number($("#"+id).find(".adjustment_subtotal_input").val());
    var tax_including_delivery_fee = Number($("#"+id).find(".tax_including_delivery_fee_input").val());
    var delivery_amount = Number($("#"+id).find(".delivery_amount").val());
    var tax_including_sales = 0
    $("#"+id).find(".daily_item_store").each(function(){
      var sell_price = Number($(this).find(".sell_price").val());
      var tax_including_sell_price = Number($(this).find(".tax_including_sell_price").val());
      var subordinate_amount = Number($(this).find(".subordinate_amount_input").val());
      sales = sales + (sell_price * subordinate_amount);
      tax_including_sales = tax_including_sales + (tax_including_sell_price * subordinate_amount);
    });
    var cost = unit_cost_price * delivery_amount + delivery_fee
    var arari = sales - cost
    var arari_rate = Math.round((arari / sales)*100, 1)

    $("#"+id).find(".estimated_sales_input").val(sales);
    $("#"+id).find(".tax_including_estimated_sales_input").val(tax_including_sales);
    $("#"+id).find(".ararirate").val(arari_rate+"%");
    arari = String(arari).replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,');
    $("#"+id).find(".arari").val(arari+"円");
    $("#"+id).find(".subtotal_price_input").val(cost);
    $("#"+id).find(".tax_including_subtotal_price_input").val(tax_including_unit_cost_price * delivery_amount + tax_including_delivery_fee + adjustment);
  }
  



  $('body').on('change', '.item_sell_price' , function() {
    calculate_tax_including_sell_price();
  });

  $('body').on('change', '.item_purchase_price' , function() {
    var id = $(this).parents('.modal').attr('id');
    calculate_purchase_price();
  });

  $('body').on('change', '.item_reduced_tax_flag' , function() {
    calculate_tax_including_sell_price();
    calculate_purchase_price();
  });
  $(".item_order_unit").on('change',function(){
    var selected = $(this).children("option:selected");
    $(".item_order_unit_span").text(selected.text());
  });
  $(".item_unit").on('change',function(){
    var selected = $(this).children("option:selected");
    $(".item_unit_span").text(selected.text());
    $(".item_unit_label").text("1"+selected.text()+"：");
  });

  $(".item_order_unit_amount").on('change',function(){
    var order_unit_amount = Number($(this).val());
    var order_unit_price = Number($(".item_order_unit_price").val());
    var unit_price = Math.floor(order_unit_price/order_unit_amount);
    $(".item_purchase_price").val(unit_price);
    calculate_purchase_price();
  });
  $(".item_order_unit_price").on('change',function(){
    var order_unit_amount = Number($(".item_order_unit_amount").val());
    var order_unit_price = Number($(this).val());
    var unit_price = Math.floor(order_unit_price/order_unit_amount);
    $(".item_purchase_price").val(unit_price);
    calculate_purchase_price();
  });
  $('body').on('change', '.variety_select2' , function() {
    var selected = $(this).children("option:selected");
    $(".item_name").val(selected.text());
  });

  function item_select_change(id){
    var item_id = $(".item_select").val();
    if (item_id == "") {
      $(".item_edit_url").hide();
    }else{
      $(".item_edit_url").show();
      $("a.item_edit_url").attr("href","/items/"+item_id+"/edit");
    }
    $.get({
      url: "#{get_item_items_path}",
      data: { id: item_id ,target_id:id}
    }).done(function(data){
      calculate(id);
    });
  }
  function calculate_tax_including_sell_price(){
    var sell_price = $(".item_sell_price").val();
    var reduce_tax_flag = $(".item_reduced_tax_flag").prop("checked");
    if (reduce_tax_flag == true) {
      var tax_rate = 1.08
    }else{
      var tax_rate = 1.1
    }
    var tax_including_sell_price = Math.floor(sell_price * tax_rate );
    $(".item_tax_including_sell_price").val(tax_including_sell_price);
  };

  function calculate_purchase_price(){
    var purchase_price = $(".item_purchase_price").val();
    var reduce_tax_flag = $(".item_reduced_tax_flag").prop("checked");
    if (reduce_tax_flag == true) {
      var tax_rate = 1.08
    }else{
      var tax_rate = 1.1
    }
    var tax_including_purchase_price = Math.floor(purchase_price * tax_rate );
    $(".item_tax_including_purchase_price").val(tax_including_purchase_price);
  };


css:
  .table-responsive th {
    white-space: nowrap;
    background-color:white;
  }
  table.layout-fixed {
    table-layout: fixed;
    border-collspace:separate;
  }
  .table th:first-child,td:first-child{
    position: sticky;
    left: 0;
  }
  .col240{
    width:240px;
  }
  .col330{
    width:330px;
  }
  .col120{
    width:100px;
  }

  .col140{
    width:140px;
  }
  .col50{
    width:50px;
  }
  .col90{
    width:90px;
  }
  .select2-results , .select2-results__options {
    max-height: 500px !important;
    height: 500px !important;
  }
  .select2-selection__rendered {
    line-height: 28px !important;
  }
  .select2-container .select2-selection--single {
      height: 34px !important;
      border-color: #cccccc;
  }
  .select2-selection__arrow {
      height: 31px !important;
  }