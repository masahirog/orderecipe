h3 進捗ボードの通知【タスク・改善・プロジェクト】
span 「不定期タスク、改善点、プロジェクト」の進捗・共有の管理をします。リマインダーは店舗での定期タスクなので、それとは使い分ける。
.col-md-12
  .col-md-3
    h4 Todo
    - li_class = 'item'
    ul#tasks_todo_ul class="list-group list-group-flush tasks_ul" style='min-height:100px;'
      - @todos.each do |task|
        = render 'task_list',task:task
    / = link_to 'タスクを追加', new_task_path,class:'btn btn-sm btn-default'
    button.btn.btn-default.btn-sm data-toggle="modal" data-target="#modal_new_task" カードを追加
    #modal_new_task.modal.fade tabindex="-1"
      .modal-dialog
        .modal-content style='background-color:#f5f5f5;'
          .modal-body
            .clearfix
              = form_with(model: @task,class:'new_task_form', data: {remote: true}) do |f|
                .form-group
                  = f.text_field :title, class:"form-control", required:true
                hr style='border-top: 1px solid #ccc;'
                .form-group
                  = f.label :content, "内容"
                  = f.text_area :content, class:"form-control",style:"height:10em;"
                .form-group
                  = f.label :final_decision, "最終決定"
                  = f.text_area :final_decision, class:"form-control",style:"height:10em;"
                .form-group
                  label 既読確認チェック
                  ul.list-group.clearfix
                    = f.fields_for :task_staffs do |ts|
                      = ts.hidden_field :task_id
                      = ts.hidden_field :staff_id
                      li.list-group-item style='float:left;'
                        = ts.label :read_flag, ts.object.staff.name
                        = ts.check_box :read_flag

                .clearfix
                  = f.select :status, options_for_select_from_enum(Task, :status),{include_blank:'ステータス'}, { class: "form-control", required:true,style:'float:left;width:150px;'}
                  = f.text_field :drafter, class:"form-control",placeholder:'投稿者名',style:'float:left;width:150px;margin-left:10px;', required:true
                  div style='width:100px;float:left;padding:5px 10px;'
                    label 通知
                    = check_box_tag "chatwork_notice",true,true
                  = f.submit '更新する',class:'btn btn-primary pull-right'

  .col-md-3
    h4 Doing
    ul#tasks_doing_ul class="list-group list-group-flush tasks_ul ul-sortable" style='min-height:100px;'
      - @doings.each do |task|
        = render 'task_list',task:task
  .col-md-3
    h4 Check
    ul#tasks_check_ul class="list-group list-group-flush tasks_ul ul-sortable" style='min-height:100px;'
      - @checks.each do |task|
        = render 'task_list',task:task
  .col-md-3
    h4 Done
    ul#tasks_done_ul class="list-group list-group-flush tasks_ul ul-sortable" style='min-height:100px;'
      - @dones.each do |task|
        = render 'task_list',task:task

javascript:
  $('.staff_read_check').on( 'change',function(){
    Rails.fire($(this).parent().parent('form')[0], 'submit');
  });

  $(".tasks_ul").sortable({
    items: '.item',
    handle: '.drag',
    connectWith: '.tasks_ul',
    update: function(e, ui) {
      let item = ui.item;
      let item_data = item.data();
      let ul_id = item.parent().attr('id');
      let params = { _method: 'put' };
      params[item_data.modelName] = { row_order_position: item.index() };
      if(ul_id == 'tasks_todo_ul'){
        params[item_data.modelName]['status'] = 'todo';
      }else if (ul_id == 'tasks_doing_ul') {
        params[item_data.modelName]['status'] = 'doing';
      }else if (ul_id == 'tasks_check_ul') {
        params[item_data.modelName]['status'] = 'check';
      }else if (ul_id == 'tasks_done_ul') {
        params[item_data.modelName]['status'] = 'done';
      }
      $.ajax({
        type: 'POST',
        url: item_data.updateUrl,
        dataType: 'json',
        data: params,
      });
    },
    stop(e, ui) {
      return ui.item.effect('highlight');
    }
  });

css:
  .drag{
    cursor:grab;
  }
  .drag:active{
    cursor:grabbing;
  }
