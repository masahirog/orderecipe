div style='margin-bottom:20px;'
  = form_tag vegetable_time_sales_analyses_path, :method => 'get' do
    .clearfix
      label style='float:left;' 店舗選択
      ul style="list-style:none;float:left;"
        - @stores.each do |store|
          li style='float:left;margin-right:10px;'
            = check_box_tag "stores[#{store.id}]",true,params['stores'][store.id.to_s]
            = label_tag "stores[#{store.id}]",store.name
    div
      label style='float:left;margin-right:10px;' 表示期間
      = date_field_tag :from, params[:from], class:"form-control float-left",style:'width:200px;float:left;'
      div style="float:left;padding:8px;" 〜
      = date_field_tag :to, params[:to], class:"form-control",style:'width:200px;float:left;'
    = submit_tag "絞り込み" ,class:"btn btn-primary",style:"margin-left:20px;"


h3 時間帯別販売データ
canvas#chart1


.table-responsive style='height:900px;overflow: scroll;overscroll-behavior-x: contain;'
  table.table.layout-fixed style='border-collapse:separate;'
    colgroup
      col class=""
      col class="col1"
      col class="col1"
      - @times.each do |time|
        col class="col1"
        col class="col1"
    thead style='position: sticky;top:0;background-color:white;z-index:3;'
      tr
        th style='background-color:white;width:200px;' 商品名
        th.fixed_second_thtd colspan=2 style='width:750px;' 全体
        - @times.each do |time|
          th colspan=2 = time

      tr
        th style='background-color:white;width:200px;'
        th.fixed_second_thtd style='width:70px;' 数
        th.fixed_third_thtd style='width:70px;' 金額
        - @times.each do |time|
          th.aaa style="" 数
          th.aaa style="" 金額

    tbody
      - @uniq_shohin_ids.each_with_index do |shohin_id,i|
        tr
          td = @sales_data[shohin_id][:name]
          td.fixed_second_thtd = @sales_data[shohin_id][:sales_num] if @sales_data[shohin_id][:sales_num].present?
          td.fixed_third_thtd = @sales_data[shohin_id][:sales_amount].to_s(:delimited) if @sales_data[shohin_id][:sales_amount].present?
          - @times.each do |time|
            td = @sales_data[shohin_id][:time][time][:sales_num] if @sales_data[shohin_id][:time][time].present?
            td = @sales_data[shohin_id][:time][time][:sales_amount].to_s(:delimited) if @sales_data[shohin_id][:time][time].present?



css:
  .table-responsive th {
    white-space: nowrap;
  }
  table.layout-fixed {
    table-layout: fixed;
    border-collspace:separate;
  }
  .table th:first-child,td:first-child{
    position: sticky;
    left: 0;
    z-index:2;
    background-color:white;
  }
  .table .fixed_second_thtd {
    position: sticky;
    z-index:2;
    left:200px;
    background-color:#f5f5f5;
  }
  .table .fixed_third_thtd {
    position: sticky;
    z-index:2;
    left:250px;
    background-color:#f5f5f5;
  }
  th,td {
    border-right: 1px solid #ddd;
    font-size:0.9em;
    font-weight:normal;
    text-align:center;
  }
  .col1{
    width:50px;
  }
  tr:hover td {
    background-color: #faf0e6;
  }

javascript:
  // 1個目のグラフ
  var ctx = document.getElementById("chart1").getContext('2d');
  ctx.canvas.height = 80;
  var chart1 = new Chart(ctx, {
    type: 'bar',
    data: {
      labels: gon.times,
      datasets: [{
        type: 'line',
        label: "販売数",
        data: gon.sales_num_data,
        backgroundColor: '#ffa500',
        borderColor: '#ffa500',
        fill: false,
        stacked: false,
        yAxisID: "y-axis-2",
        pointRadius: 0
      },{
        type: 'bar',
        label: "売上",
        data: gon.sales_amount_data,
        backgroundColor: '#f5deb3',
        borderColor: '#f5deb3',
        fill: false,
        stacked: false,
        yAxisID: "y-axis-1",
        pointRadius: 0,
        borderWidth: 2
      }
    ]
    },
    options: {
      scales: {
        xAxes: [{
          stacked: true,
          scaleLabel: {
            display: true,
            fontSize: 16
          }
        }],
        yAxes: [{
          stacked: false,
          id: "y-axis-1",
          type: "linear",
          position: "right",
          ticks: {
            min: 0,
            callback: function(label, index, labels) {
              return label.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
            }
          }
        },{
          stacked: false,
          id: "y-axis-2",
          type: "linear",
          position: "left",
          ticks: {
            min: 0,
            callback: function(label, index, labels) {
              return label.toString();
            }
          }
        }]
      },
      legend: {
        labels:{
          filter: function(items) {
            return items.text != null;
          }
        }
      }
    }
  });
