table.table
  thead
    tr
      th 日付
      th 店舗名
      th 総売上
      th 値引き合計
      th 順売上
      th 消費税
      th 税抜売上
      th 店舗売上
      th デリバリー売上
      th 廃棄金額
      th 廃棄率
      th ポイント利用
      th 来客数
      th ~14客数
      th 惣菜販売数
      th ~14販売数
  tbody
    tr
      td = @analysis.date.strftime("%-m月%-d日(#{%w(日 月 火 水 木 金 土)[@analysis.date.wday]})")
      td = @analysis.store.name
      td = "#{@analysis.total_sales_amount.to_s(:delimited)}円" if @analysis.total_sales_amount
      td = "#{@analysis.discount_amount.to_s(:delimited)}円" if @analysis.discount_amount
      td = "#{@analysis.net_sales_amount.to_s(:delimited)}円" if @analysis.net_sales_amount
      td = "#{@analysis.tax_amount.to_s(:delimited)}円" if @analysis.tax_amount
      td = "#{@analysis.ex_tax_sales_amount.to_s(:delimited)}円" if @analysis.ex_tax_sales_amount
      td = "#{@analysis.store_sales_amount.to_s(:delimited)}円" if @analysis.store_sales_amount
      td = "#{@analysis.delivery_sales_amount.to_s(:delimited)}円" if @analysis.delivery_sales_amount
      td = "#{@analysis.loss_amount.to_s(:delimited)}円" if @analysis.loss_amount
      td = "#{((@analysis.loss_amount.to_f/@analysis.ex_tax_sales_amount)*100).round(1)}%" if @analysis.ex_tax_sales_amount && @analysis.loss_amount
      td = "#{@analysis.used_point_amount.to_s(:delimited)}円"  if @analysis.used_point_amount
      td = "#{@analysis.transaction_count}組"
      td = "#{@analysis.fourteen_transaction_count}組"
      td = @analysis.total_number_sales_sozai
      td = @analysis.fourteen_number_sales_sozai

= link_to '計算', products_analyses_path(analysis_id:@analysis.id), method: :post,class:'btn btn-sm btn-primary'

= link_to 'Orderecipeデータリセット',bulk_delete_analysis_products_analyses_path(analysis_id:@analysis.id), {method: :post, data: { confirm: '削除しますか？' },class:'btn btn-sm btn-danger pull-right'}
table.table
  thead
    tr style="background-color:gainsboro;"
      th = link_to "Orderecipe 献立",@store_daily_menu
      th OR単価
      th スマレジ商品
      th スマレジ単価
      th 在庫
      th 繰越
      th 実在庫
      th 盛付数合計
      th 過不足
      th 販売数
      th 販売金額
      th 廃棄数
      th 廃棄金額
      th 完売

  tbody
    - @store_daily_menu_details.each do |sdmd|
      - ap = @or_ari_analysis_products[sdmd.product_id]
      - bgcolor = "white"
      - bgcolor = 'lightpink' if ap.present? && ap.loss_number.present? && sdmd.sold_out_flag == true && ap.loss_number > 0
      tr style="background-color:#{bgcolor}"
        td = link_to sdmd.product.name,store_product_sales_analyses_path(store_id:@analysis.store_id,product_id:sdmd.product_id)
        td = sdmd.product.sell_price
        td = ap.smaregi_shohin_name if ap.present?
        td = ap.smaregi_shohintanka if ap.present?
        td = ap.manufacturing_number if ap.present?
        td = ap.carry_over if ap.present?
        td = ap.actual_inventory if ap.present?
        td = sdmd.prepared_number
        td = sdmd.excess_or_deficiency_number
        td = ap.sales_number if ap.present?
        td = ap.ex_tax_sales_amount.to_s(:delimited) if ap.present? && ap.ex_tax_sales_amount.present?
        td = ap.loss_number if ap.present?
        td = ap.loss_amount.to_s(:delimited) if ap.present? && ap.loss_amount.present?
        td = '○' if sdmd.sold_out_flag == true
    tr style="background-color:gainsboro;"
      th Orderecipe 献立外 メニュー
      th OR単価
      th スマレジ商品
      th スマレジ単価
      th 在庫
      th 繰越
      th 実在庫
      th 販売数
      th 販売金額
      th 廃棄数
      th 廃棄金額

    - @or_nashi_analysis_products.each do |ap|
      tr style="background-color:whitesmoke;"
        td
          - if ap.product.present?
            = link_to ap.product.name,edit_product_path(id:ap.product_id),target:'_blank'
          - else
            |unkown
        td
          - if ap.product.present?
            = ap.product.sell_price
          - else
            |
        td = ap.smaregi_shohin_name
        td = ap.smaregi_shohintanka
        td = ap.manufacturing_number
        td
        td
        td = ap.sales_number
        td = ap.total_sales_amount
        td = ap.loss_number
        td = ap.loss_amount

.col-md-12
  = form_tag analysis_path, :method => 'get' do
    .col-md-2
      = hidden_field_tag :id,params[:id]
      = select_tag :shohin_id, options_for_select(@shohin_ids,params[:shohin_id]),include_blank:'商品ID' , class: "form-control",placeholder:'商品ID'
    .col-md-2
      = select_tag :hinban, options_for_select(@product_ids,params[:hinban]),include_blank: 'OR_ID', class: "form-control",placeholder:'ORID'
    .col-md-2
      = select_tag :shohinmei, options_for_select(@shohinmeis,params[:shohinmei]),include_blank:'商品名', class: "form-control",placeholder:'ORID'
    .col-md-1
      label 　
      = submit_tag "絞り込む" ,class:"btn btn-primary"
  - if @smaregi_trading_histories.present?
    .pull-right
      |※販売履歴のデータを再アップロードする場合は一度全件削除してください。
  - else
    .pull-right
      button type="button" class="btn btn-sm btn-primary" data-toggle="modal" data-target="#sampleModal" スマレジ販売履歴アップロード
      #sampleModal.modal.fade tabindex="-1"
        = form_tag upload_salesdatas_smaregi_trading_histories_path, multipart: true do
          .modal-dialog
            .modal-content
              .modal-header
                h4.modal-title 新規作成
              .modal-body
                = hidden_field_tag :smaregi_store_id,@analysis.store.smaregi_store_id
                = hidden_field_tag :analysis_id,@analysis.id
                = hidden_field_tag :date,@analysis.date
                = file_field_tag :file,class:'form-control',style:'padding:10px;height:100%;'
              .modal-footer
                button.modal-close.btn.btn-default type="button" data-dismiss="modal" 閉じる
                = submit_tag "アップロード",class:'btn btn-primary'


table.table
  thead
    tr
      th 取引ID
      th 取引日時
      th 販売者
      th 商品ID
      th OR_ID
      th
        |商品名
        = link_to '▲', analysis_path(@analysis.id,row_order:'asc')
      th 商品単価
      th 数量
      th 単価値引き計
      th 値引き後計

  tbody
    - @smaregi_trading_histories.each do |smaregi_trading_history|
      tr class="sth_#{smaregi_trading_history.id}"
        td = smaregi_trading_history.torihiki_id
        td = smaregi_trading_history.torihiki_nichiji.strftime("%Y/%m/%d %H:%M")
        td = smaregi_trading_history.hanbaiin_mei
        td style='padding-top:2px;padding-bottom:2px;'
          = form_with(model: smaregi_trading_history, data: {remote: true}) do |f|
            = f.number_field :shohin_id,style:'width:80px;',value:smaregi_trading_history.shohin_id,class:'form-control'
        td style='padding-top:2px;padding-bottom:2px;'
          = form_with(model: smaregi_trading_history, data: {remote: true}) do |f|
            = f.number_field :hinban,style:'width:80px;',value:smaregi_trading_history.hinban,class:'form-control'
        td = smaregi_trading_history.shohinmei
        td = smaregi_trading_history.shohintanka
        td = smaregi_trading_history.suryo
        td = smaregi_trading_history.tanka_nebikikei
        td = smaregi_trading_history.nebikigokei

= paginate @smaregi_trading_histories
- if @smaregi_trading_histories.present?
  = link_to '販売履歴データリセット',bulk_delete_smaregi_trading_histories_path(analysis_id:@analysis.id), {method: :post, data: { confirm: '削除しますか？' },class:'pull-right btn btn-sm btn-danger'}
  - if @analysis.analysis_products.present?
    span ※販売履歴の数値を修正後、データ反映するには、ページ最上部右のOrderecipeの献立データをリセットしてください
  - else
    = link_to '販売履歴の更新を反映', smaregi_trading_history_totalling_analyses_path(analysis: {analysis_id:@analysis.id}), method: :post,class:'btn btn-sm btn-success pull-right',style:'margin-right:10px;', data: { confirm: '更新した売上データ情報を反映しますか？' }
