div style='margin-bottom:20px;'
  = form_tag summary_analyses_path, :method => 'get' do
    .clearfix
      label style='float:left;' 店舗選択
      ul style="list-style:none;float:left;"
        - @stores.each do |store|
          li style='float:left;margin-right:10px;'
            = check_box_tag "stores[#{store.id}]",true,params['stores'][store.id.to_s]
            = label_tag "stores[#{store.id}]",store.name
    div
      label style='float:left;margin-right:10px;' 表示期間
      = date_field_tag :from, params[:from], class:"form-control float-left",style:'width:200px;float:left;'
      div style="float:left;padding:8px;" 〜
      = date_field_tag :to, params[:to], class:"form-control",style:'width:200px;float:left;'
    = submit_tag "絞り込み" ,class:"btn btn-primary",style:"margin-left:20px;"
    = link_to '販売データ',analyses_path(from:params[:from],to:params[:to]),class:'btn btn-sm btn-primary pull-right'
h3 売上推移と来客数
canvas#chart1

h3 廃棄金額と廃棄率
canvas#chart2

/ h3 メニュー別販売数
/ table.table
/   thead
/     tr
/       th メニュー名
/       th スコア
/       th
/         = link_to '▲',summary_analyses_path(sort:'actual_inventory',sc:'asc')
/         span 在庫数
/         = link_to '▼',summary_analyses_path(sort:'actual_inventory',sc:'desc')
/       th
/         = link_to '▲',summary_analyses_path(sort:'sales_number',sc:'asc')
/         span 販売数
/         = link_to '▼',summary_analyses_path(sort:'sales_number',sc:'desc')
/       th
/         = link_to '▲',summary_analyses_path(sort:'count',sc:'asc')
/         span 販売回数
/         = link_to '▼',summary_analyses_path(sort:'count',sc:'desc')
/
/       th
/         = link_to '▲',summary_analyses_path(sort:'sales_rate',sc:'asc')
/         span 販売率
/         = link_to '▼',summary_analyses_path(sort:'sales_rate',sc:'desc')
/       th colspan=3 在庫内での時間帯別販売率
/
/     tr
/       th
/       th
/       th
/       th
/       th
/       th
/       th 11-14
/       th 14-19
/       th 19-21
/
/   tbody
/     - @product_datas.each do |product_data|
/       tr
/         td = product_data['name']
/         td
/         td = product_data['actual_inventory']
/         td = product_data['sales_number']
/         td = product_data['count']
/         td
/           - if product_data['sales_number'].present?
/
/             - if product_data['sales_rate'] < 70
/               - color = "red"
/             - elsif  product_data['sales_rate'] < 80
/               - color = "blue"
/             - else
/               - color = 'black'
/
/             span style="color:#{color};" = "#{product_data['sales_rate']}%"
/
/         td = "#{((@early_sales_number[product_data["product_id"]].to_f/@day_sales_number[product_data["product_id"]])*100).round}%" if @early_sales_number[product_data["product_id"]]
/         td = "#{((@middle_sales_number[product_data["product_id"]].to_f/@day_sales_number[product_data["product_id"]])*100).round}%" if @early_sales_number[product_data["product_id"]]
/         td = "#{((@late_sales_number[product_data["product_id"]].to_f/@day_sales_number[product_data["product_id"]])*100).round}%" if @early_sales_number[product_data["product_id"]]


javascript:
  // 1個目のグラフ
  var ctx = document.getElementById("chart1").getContext('2d');
  ctx.canvas.height = 80;
  var chart1 = new Chart(ctx, {
    type: 'bar',
    data: {
      labels: gon.sales_dates,
      datasets: [{
        type: 'line',
        label: "来客組数",
        data: gon.transaction_count_date,
        backgroundColor: 'rgba(255, 99, 132, 0.7)',
        borderColor: 'rgba(255, 99, 132, 0.8)',
        fill: false,
        stacked: false,
        yAxisID: "y-axis-2",
        pointRadius: 0
      },{
        type: 'bar',
        label: "売上",
        data: gon.sales_data,
        backgroundColor: 'rgba(54, 162, 235, 0.7)',
        borderColor: 'rgba(54, 162, 235, 0.7)',
        fill: false,
        stacked: false,
        yAxisID: "y-axis-1"
      }]
    },
    options: {
      scales: {
        xAxes: [{
          stacked: true,
          scaleLabel: {
            display: true,
            fontSize: 16
          }
        }],
        yAxes: [{
          stacked: false,
          id: "y-axis-1",
          type: "linear",
          position: "right",
          ticks: {
            min: 0,
            callback: function(label, index, labels) {
              return label.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
            }
          }
        },{
          stacked: false,
          id: "y-axis-2",
          type: "linear",
          position: "left",
          ticks: {
            min: 0
          }

        }]
      }
    }
  });
  // 2個目のグラフ
  var ctx = document.getElementById("chart2").getContext('2d');
  ctx.canvas.height = 80;
  var chart2 = new Chart(ctx, {
    type: 'bar',
    data: {
      labels: gon.sales_dates,
      datasets: [{
        type: 'line',
        label: "廃棄率",
        data: gon.loss_data,
        backgroundColor: 'rgba(255, 99, 132, 0.7)',
        borderColor: 'rgba(255, 99, 132, 0.8)',
        fill: false,
        stacked: false,
        yAxisID: "y-axis-2",
        pointRadius: 0
      },{
        type: 'line',
        label: "廃棄率8%",
        data: gon.loss_mokuhyo_data,
        backgroundColor: 'rgba(255,0,0,0.9)',
        borderColor: 'rgba(255,0,0,0.9)',
        fill: false,
        stacked: false,
        yAxisID: "y-axis-2",
        pointRadius: 0
      },{
        type: 'bar',
        label: "廃棄金額",
        data: gon.lossamount_data,
        backgroundColor: 'rgba(54, 162, 235, 0.7)',
        borderColor: 'rgba(54, 162, 235, 0.7)',
        fill: false,
        stacked: false,
        yAxisID: "y-axis-1"
      }]
    },
    options: {
      scales: {
        xAxes: [{
          stacked: true,
          scaleLabel: {
            display: true,
            fontSize: 16
          }
        }],
        yAxes: [{
          stacked: false,
          id: "y-axis-1",
          type: "linear",
          position: "left",
          ticks: {
            min: 0,
            callback: function(label, index, labels) {
              return label.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
            }
          }
        },{
          stacked: false,
          id: "y-axis-2",
          type: "linear",
          position: "right",
          ticks: {
            min: 0,
            callback: function(label, index, labels) {
              return label.toString() + "%";
            }
          }
        }]
      }
    }
  });
