div style='margin-bottom:20px;'
  = form_tag smaregi_members_analyses_path, :method => 'get' do
    .clearfix
      label style='float:left;' 店舗選択
      = submit_tag "絞り込み" ,class:"btn btn-primary",style:"margin-left:20px;"
      ul style="list-style:none;float:left;"
        - @stores.each do |store|
          li style='float:left;margin-right:10px;'
            = check_box_tag "stores[#{store.id}]",true,params['stores'][store.id.to_s]
            = label_tag "stores[#{store.id}]",store.name
    / div
    /   label style='float:left;margin-right:10px;' 表示期間
    /   = date_field_tag :from, params[:from], class:"form-control float-left",style:'width:200px;float:left;'
    /   div style="float:left;padding:8px;" 〜
    /   = date_field_tag :to, params[:to], class:"form-control",style:'width:200px;float:left;'

.clearfix
  .col-md-4 style='float:left;'
    h3 2回目、3回目 来店者数
    canvas id="repeat_member"
  .col-md-4 style='float:left;'
    h3 新規登録者数
    canvas id="new_member"
  .col-md-4 style='float:left;'
    h3 累計登録者数
    canvas id="ruikei_member"

.clearfix
  .col-md-4 style='float:left;'
    h3 来店回数別 会員数
    canvas id="myDoughnutChart"
  .col-md-4 style='float:left;'
    h3 性別
    canvas id="sex"
  .col-md-4 style='float:left;'
    h3 年齢別会員数
    ="誕生日登録者：#{@count_saved_birthday}、誕生日未登録者：#{@count_un_saved_birthday}"
    canvas id="age_user_count"


h3 会員一覧
/ = form_tag member_smaregi_trading_histories_path(format: :csv), :method => 'get' do
= form_tag member_smaregi_trading_histories_path(format: :csv), multipart: true do

  / = hidden_field_tag :store_ids,params[:store_ids]
  = submit_tag "購入履歴DL" ,class:"btn btn-primary",style:'float:right;'
  = file_field_tag :file,class:'form-control',style:'padding:10px;height:100%;width:200px;float:right;margin-right:10px;'



/ = link_to '購入履歴DL',member_smaregi_trading_histories_path(order:params[:order],sc:params[:sc],page:params[:page],store_ids:params[:store_ids],format: :csv),class:'btn btn-default btn-sm pull-right',style:'margin-left:10px;'

/ = link_to '会員データDL',smaregi_member_csv_analyses_path(format: :csv),class:'btn btn-default btn-sm pull-right',style:'margin-left:10px;'

/ = link_to '販売データ更新',update_sales_data_smaregi_members_analyses_path,class:'btn btn-primary btn-sm pull-right',style:'margin-left:10px;', method: :post

button type="button" class="pull-right btn btn-primary" data-toggle="modal" data-target="#sampleModal" style='margin-right:20px;' 会員データUL
#sampleModal.modal.fade tabindex="-1"
  = form_tag upload_smaregi_members_analyses_path, multipart: true do
    .modal-dialog
      .modal-content
        .modal-header
          h4.modal-title データのアップロード
        .modal-body
          = file_field_tag :file,class:'form-control',style:'padding:10px;height:100%;'
        .modal-footer
          button.modal-close.btn.btn-default type="button" data-dismiss="modal" 閉じる
          = submit_tag "アップロード",class:'btn btn-primary'

= paginate @smaregi_members
table.table
  thead
    tr
      th 会員ID
      th 会員コード
      th 店舗
      th 性別
      th 誕生日
      th
        = link_to "▲",smaregi_members_analyses_path(order:'point',sc:"asc",store_ids:params[:store_ids])
        span ポイント
        = link_to "▼",smaregi_members_analyses_path(order:'point',sc:"desc",store_ids:params[:store_ids])
      th 入会日
      th 最新来店日
      th
        = link_to "▲",smaregi_members_analyses_path(order:'raiten_kaisu',sc:"asc",store_ids:params[:store_ids])
        span 来店回数
        = link_to "▼",smaregi_members_analyses_path(order:'raiten_kaisu',sc:"desc",store_ids:params[:store_ids])
      th 履歴

  tbody
    - @smaregi_members.each do |sm|
      tr
        td = sm.kaiin_id
        td = sm.kaiin_code
        td = sm.main_use_store
        td = sm.sex
        td = sm.birthday
        td = sm.point
        td = sm.nyukaibi.strftime("%-Y/%-m/%-d (#{%w(日 月 火 水 木 金 土)[sm.nyukaibi.wday]})") if sm.nyukaibi.present?
        td = sm.last_visit_store.strftime("%-Y/%-m/%-d (#{%w(日 月 火 水 木 金 土)[sm.last_visit_store.wday]})") if sm.last_visit_store.present?
        td = sm.raiten_kaisu
        td = link_to '履歴',orders_analyses_path(kaiin_id:sm.kaiin_id)

javascript:
  var ctx = document.getElementById("myDoughnutChart");
  var chart_kaisu = new Chart(ctx, {
    type: 'doughnut',
    data: {
        labels: gon.raiten_kaisu,
        datasets: [{
            data: gon.raiten_count
        }]
    },options: {
        animation: {
            animateRotate: false
        },
        plugins: {
            colorschemes: {
              scheme: 'tableau.Tableau20'
          }
        }
    }
  });
  var ctx2 = document.getElementById("sex");
  var chart_sex = new Chart(ctx2, {
    type: 'doughnut',
    data: {
        labels: ['女性','男性','未回答'],
        datasets: [{
            data: gon.sex
        }]
    },options: {
        animation: {
            animateRotate: false
        },
        plugins: {
            colorschemes: {
              scheme: 'tableau.Tableau20'
          }
        }
    }
  });
  var ctx3 = document.getElementById("age_user_count");
  var chart_sex = new Chart(ctx3, {
    type: 'bar',
    data: {
      labels:["10代",'20代','30代','40代','50代','60代','70代以上'],
      datasets: [{
        data: gon.age_users,
        fill: false,
        stacked: false,
        yAxisID: "y-axis-1",
        pointRadius: 0
      }]
    },
    options: {
      legend: {display: false},
      plugins: {
          colorschemes: {
            scheme: 'tableau.Tableau20'
        }
      },
      scales: {
        xAxes: [{
          stacked: true,
          scaleLabel: {
            display: true,
            fontSize: 16
          }
        }],
        yAxes: [{
          stacked: false,
          id: "y-axis-1",
          type: "linear",
          position: "left",
          ticks: {
            min: 0
          }
        }]
      }
    }
  });

  var ctx4 = document.getElementById("new_member");
  var chart = new Chart(ctx4, {
    type: 'bar',
    data: {
      labels:gon.month_days,
      datasets: [{
        data: gon.shinki_torokusu,
        fill: false,
        stacked: false,
        yAxisID: "y-axis-1",
        pointRadius: 0
      }]
    },
    options: {
      legend: {display: false},
      plugins: {
          colorschemes: {
            scheme: 'tableau.Tableau20'
        }
      },
      scales: {
        xAxes: [{
          stacked: true,
          scaleLabel: {
            display: true,
            fontSize: 16
          }
        }],
        yAxes: [{
          stacked: false,
          id: "y-axis-1",
          type: "linear",
          position: "left",
          ticks: {
            min: 0
          }
        }]
      }
    }
  });

  var ctx5 = document.getElementById("ruikei_member");
  var chart = new Chart(ctx5, {
    type: 'bar',
    data: {
      labels:gon.month_days,
      datasets: [{
        data: gon.ruiei_members,
        fill: false,
        stacked: false,
        yAxisID: "y-axis-1",
        pointRadius: 0
      }]
    },
    options: {
      legend: {display: false},
      plugins: {
          colorschemes: {
            scheme: 'tableau.Tableau20'
        }
      },
      scales: {
        xAxes: [{
          stacked: true,
          scaleLabel: {
            display: true,
            fontSize: 16
          }
        }],
        yAxes: [{
          stacked: false,
          id: "y-axis-1",
          type: "linear",
          position: "left",
          ticks: {
            min: 0
          }
        }]
      }
    }
  });

  var ctx5 = document.getElementById("repeat_member");
  var chart = new Chart(ctx5, {
    type: 'bar',
    data: {
      labels:gon.month_days,
      datasets: [{
        data: gon.repeat_members,
        fill: false,
        stacked: false,
        yAxisID: "y-axis-1",
        pointRadius: 0
      }]
    },
    options: {
      legend: {display: false},
      plugins: {
          colorschemes: {
            scheme: 'tableau.Tableau20'
        }
      },
      scales: {
        xAxes: [{
          stacked: true,
          scaleLabel: {
            display: true,
            fontSize: 16
          }
        }],
        yAxes: [{
          stacked: false,
          id: "y-axis-1",
          type: "linear",
          position: "left",
          ticks: {
            min: 0
          }
        }]
      }
    }
  });
